name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '**' ]

jobs:
  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Go
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: '1.24'
  #         cache: true

  #     - name: Install golangci-lint
  #       uses: golangci/golangci-lint-action@v3
  #       with:
  #         version: v1.55.2

  #     - name: Run golangci-lint
  #       run: golangci-lint run ./...
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.txt
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Build
        run: go build -v ./...

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.digitalocean.com
          username: {{ "${{ vars.DO_TOKEN }}" }}
          password: {{ "${{ vars.DO_TOKEN }}" }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.digitalocean.com/ienergy-registry/{{.Name}}
          tags: |
            type=sha,format=short
            type=raw,value=latest,enable={{ "{{is_default_branch}}" }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: {{ "${{ steps.meta.outputs.tags }}" }}
          labels: {{ "${{ steps.meta.outputs.labels }}" }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 