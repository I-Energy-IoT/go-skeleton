package entity

import (
	"github.com/google/uuid"
	"gorm.io/gorm"
)

type UserRole struct {
	ID     uuid.UUID `gorm:"primaryKey"`
	UserID uuid.UUID `gorm:"not null"`
	User   User      `gorm:"foreignKey:UserID;references:ID;constraint:OnDelete:CASCADE"`
	RoleID uuid.UUID `gorm:"not null"`
	Role   Role      `gorm:"foreignKey:RoleID;references:ID;constraint:OnDelete:CASCADE"`
}

func (ur *UserRole) TableName() string {
	return "user_roles"
}

func (ur *UserRole) BeforeCreate(tx *gorm.DB) (err error) {
	ur.ID = uuid.New()
	return
}

type UserRoleRepository interface {
	Create(userRole *UserRole) error
	Update(userRole *UserRole) error
	Delete(userRole *UserRole) error
}
