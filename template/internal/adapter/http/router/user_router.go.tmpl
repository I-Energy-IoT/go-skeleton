package router

import (
	"{{.Name}}/config"
	"{{.Name}}/internal/adapter/http/handler"
	"{{.Name}}/pkg/middleware"

	"github.com/gin-gonic/gin"
	"go.uber.org/fx"
)

type UserRouter struct {
	userHandler *handler.UserHandler
	config      *config.Config
}

func (r *UserRouter) Register(router *gin.RouterGroup) {
	user := router.Group("/users")
	user.Use(middleware.JwtAuthMiddleware(r.config))
	user.GET("/me", r.userHandler.Me)
	user.GET("/:id", r.userHandler.GetUserByID)
	user.PUT("/:id", r.userHandler.UpdateUser)
	user.DELETE("/:id", r.userHandler.DeleteUser)
}

type userRouterParams struct {
	fx.In
	UserHandler *handler.UserHandler
	Config      *config.Config
}

func NewUserRouter(params userRouterParams) *UserRouter {
	return &UserRouter{userHandler: params.UserHandler, config: params.Config}
}
