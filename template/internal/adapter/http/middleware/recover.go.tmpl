package middleware

import (
	"net/http"

	"{{.Name}}/pkg/logger"

	"github.com/gin-gonic/gin"
)

type RecoverMiddleware struct {
	logger logger.Logger
}

func NewRecoverMiddleware(logger logger.Logger) *RecoverMiddleware {
	return &RecoverMiddleware{logger: logger}
}

// Recover provides panic recovery for HTTP requests
func (m *RecoverMiddleware) Middleware() gin.HandlerFunc {
	return func(ctx *gin.Context) {
		defer func() {
			if err := recover(); err != nil {
				m.	logger.WithError(err.(error)).
					WithFields(map[string]interface{}{
						"path":   ctx.Request.URL.Path,
						"method": ctx.Request.Method,
					}).
					Error("panic recovered")
				
				ctx.Header("content-type", "application/json")
				ctx.AbortWithStatusJSON(http.StatusInternalServerError, map[string]string{
					"error": "Internal server error",
				})
			}
		}()
		ctx.Next()
	}
}
